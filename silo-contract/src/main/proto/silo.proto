//
// Protocol buffers definition for Silo server
//
syntax = "proto3";
package pt.tecnico.sauron.silo.grpc;
import "google/protobuf/timestamp.proto";

enum ObservationType {
    PERSON = 0;
    CAR = 1;
};

enum ResponseStatus {
    SUCCESS = 0;
    DUPLICATE_CAMERA = 1;
    INVALID_CAMERA = 2;
    INVALID_CAMERA_NAME = 3;
    INVALID_CAMERA_COORDINATES = 4;
    INVALID_IDENTIFIER = 5;
    NO_OBSERVATION_FOUND = 6;
}

message Observation {
    ObservationType type = 1;
    string identifier = 2;
    google.protobuf.Timestamp timestamp = 3;
}

message Coordinates {
    float latitude = 1;
    float longitude = 2;
}

message Camera {
    string name = 1;
    Coordinates coordinates = 2;
}

message CamJoinRequest {
    Camera camera = 1;
}

message CamJoinResponse {
    ResponseStatus status = 1;
}

message CamInfoRequest {
    string name = 1;
}

message CamInfoResponse {
    Coordinates coordinates = 1;
    ResponseStatus status = 2;
}

message ReportRequest {
    string cameraName = 1;
    repeated Observation observations = 2;
}

message ReportResponse {
    ResponseStatus status = 1;
}

message TrackRequest {
    ObservationType type = 1;
    string identifier = 2;
}

message TrackResponse {
    ResponseStatus status = 1;
    Observation observation = 2;
}

message TrackMatchRequest {
    ObservationType type = 1;
    string pattern = 2;
}

message TrackMatchResponse {
    ResponseStatus status = 1;
    Observation observation = 2;
}

message TraceRequest {
    ObservationType type = 1;
    string identifier = 2;
}

message TraceResponse {
    ResponseStatus status = 1;
    repeated Observation observations = 2;
}

service Sauron {
    rpc camJoin(CamJoinRequest) returns (CamJoinResponse);
    rpc camInfo(CamInfoRequest) returns (CamInfoResponse);
    rpc report(ReportRequest) returns (ReportResponse);
    rpc track(TrackRequest) returns (TrackResponse);
    rpc trackMatch(TrackMatchRequest) returns (TrackMatchResponse);
    rpc trace(TraceRequest) returns (TraceResponse);
}